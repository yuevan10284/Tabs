{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport React, { useEffect, useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { FIRESTORE_DB } from \"./firebaseConfig\";\nimport { useRoute } from \"@react-navigation/native\";\nimport Slider from \"@react-native-community/slider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PlantDataForm = function PlantDataForm(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    plant = _useState2[0],\n    setPlant = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDead = _useState4[0],\n    setIsDead = _useState4[1];\n  var _useState5 = useState(5),\n    _useState6 = _slicedToArray(_useState5, 2),\n    plantHealth = _useState6[0],\n    setPlantHealth = _useState6[1];\n  var route = useRoute();\n  useEffect(function () {\n    var _ref2 = route.params || {},\n      email = _ref2.email;\n  }, [route]);\n  var addPlant = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var docRef = yield addDoc(collection(FIRESTORE_DB, \"plantsData\"), {\n          plantID: plant,\n          dead: isDead,\n          plantHealth: plantHealth,\n          email: route.params.email.toLowerCase(),\n          timestamp: serverTimestamp()\n        });\n        console.log(\"Added plant with ID: \", docRef.id);\n        setPlant(\"\");\n        setIsDead(false);\n        setPlantHealth(5);\n      } catch (error) {\n        console.error(\"Error adding plant: \", error);\n      }\n    });\n    return function addPlant() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.formTitles,\n        children: \"Plant ID\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Instead of QR code, enter plant ID\",\n        onChangeText: function onChangeText(text) {\n          return setPlant(text);\n        },\n        value: plant\n      })]\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.formTitles,\n        children: \"Dead\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: \"#767577\",\n          true: \"#00cc44\"\n        },\n        thumbColor: isDead ? \"#ccffdd\" : \"#f4f3f4\",\n        onValueChange: function onValueChange(value) {\n          return setIsDead(value);\n        },\n        value: isDead\n      })]\n    }), _jsxs(View, {\n      children: [_jsxs(Text, {\n        style: styles.formTitles,\n        children: [\"Plant Health: \", plantHealth]\n      }), _jsx(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        children: _jsx(Slider, {\n          style: {\n            width: 300,\n            height: 50\n          },\n          minimumValue: 0,\n          maximumValue: 10,\n          step: 1,\n          minimumTrackTintColor: \"#00cc44\",\n          maximumTrackTintColor: \"#006622\",\n          thumbTintColor: \"#00cc44\",\n          value: plantHealth,\n          onValueChange: function onValueChange(value) {\n            return setPlantHealth(value);\n          }\n        })\n      })]\n    }), _jsx(Button, {\n      onPress: addPlant,\n      title: \"Add Plant\",\n      disabled: plant === \"\"\n    })]\n  });\n};\nexport default PlantDataForm;\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 20\n  },\n  form: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 20\n  },\n  formTitles: {\n    marginRight: 10\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#2F5233\",\n    backgroundColor: \"#e6ffe6\",\n    height: 40,\n    borderRadius: 4,\n    flex: 1,\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","addDoc","collection","serverTimestamp","FIRESTORE_DB","useRoute","Slider","jsx","_jsx","jsxs","_jsxs","PlantDataForm","_ref","navigation","_useState","_useState2","_slicedToArray","plant","setPlant","_useState3","_useState4","isDead","setIsDead","_useState5","_useState6","plantHealth","setPlantHealth","route","_ref2","params","email","addPlant","_ref3","_asyncToGenerator","docRef","plantID","dead","toLowerCase","timestamp","console","log","id","error","apply","arguments","View","style","styles","container","children","form","Text","formTitles","TextInput","input","placeholder","onChangeText","text","value","Switch","trackColor","false","true","thumbColor","onValueChange","alignItems","width","height","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","Button","onPress","title","disabled","StyleSheet","create","marginHorizontal","flexDirection","marginVertical","marginRight","borderWidth","borderColor","backgroundColor","borderRadius","flex","padding"],"sources":["/Users/mitchell_cootauco/Desktop/Tabs/PlantDataForm.js"],"sourcesContent":["import {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  TextInput,\n  Switch,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { FIRESTORE_DB } from \"./firebaseConfig\";\nimport { useRoute } from \"@react-navigation/native\";\nimport Slider from \"@react-native-community/slider\";\n\nconst PlantDataForm = ({ navigation }) => {\n  const [plant, setPlant] = useState(\"\");\n  const [isDead, setIsDead] = useState(false);\n  const [plantHealth, setPlantHealth] = useState(5);\n\n  const route = useRoute();\n\n  useEffect(() => {\n    // Access the email parameter from the route params\n    const { email } = route.params || {};\n  }, [route]);\n\n  const addPlant = async () => {\n    try {\n      const docRef = await addDoc(collection(FIRESTORE_DB, \"plantsData\"), {\n        plantID: plant,\n        dead: isDead,\n        plantHealth: plantHealth,\n        email: route.params.email.toLowerCase(),\n        timestamp: serverTimestamp(),\n      });\n      console.log(\"Added plant with ID: \", docRef.id);\n      setPlant(\"\");\n      setIsDead(false);\n      setPlantHealth(5); // Reset all the plant status variables\n    } catch (error) {\n      console.error(\"Error adding plant: \", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.formTitles}>Plant ID</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Instead of QR code, enter plant ID\"\n          onChangeText={(text) => setPlant(text)}\n          value={plant}\n        />\n      </View>\n      <View style={styles.form}>\n        <Text style={styles.formTitles}>Dead</Text>\n        <Switch\n          trackColor={{ false: \"#767577\", true: \"#00cc44\" }}\n          thumbColor={isDead ? \"#ccffdd\" : \"#f4f3f4\"}\n          onValueChange={(value) => setIsDead(value)}\n          value={isDead}\n        />\n      </View>\n      <View>\n        <Text style={styles.formTitles}>Plant Health: {plantHealth}</Text>\n        <View style={{ alignItems: \"center\" }}>\n          <Slider\n            style={{ width: 300, height: 50 }}\n            minimumValue={0}\n            maximumValue={10}\n            step={1}\n            minimumTrackTintColor=\"#00cc44\"\n            maximumTrackTintColor=\"#006622\"\n            thumbTintColor=\"#00cc44\" \n            value={plantHealth}\n            onValueChange={(value) => setPlantHealth(value)}\n          />\n        </View>\n      </View>\n      <Button onPress={addPlant} title=\"Add Plant\" disabled={plant === \"\"} />\n    </View>\n  );\n};\n\nexport default PlantDataForm;\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 20,\n  },\n\n  form: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 20,\n  },\n\n  formTitles: {\n    marginRight: 10,\n  },\n\n  input: {\n    borderWidth: 1,\n    borderColor: \"#2F5233\",\n    backgroundColor: \"#e6ffe6\",\n    height: 40,\n    borderRadius: 4,\n    flex: 1,\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}